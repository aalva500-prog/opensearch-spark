name: End-to-End Tests

on:
  pull_request:
  push:

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Set up SBT
        uses: sbt/setup-sbt@v1

      - name: Build project
        run: sbt assembly

      - name: Create minimal docker-compose file
        run: |
          cd docker/integ-test
          cat > docker-compose.minimal.yml << 'EOF'
          services:
            metastore:
              image: apache/hive:3.1.3
              container_name: metastore
              environment:
                - SERVICE_NAME=metastore
              ports:
                - "9083:9083"
              networks:
                - test-network

            minio:
              image: minio/minio
              container_name: minio-S3
              command: server /data --console-address ":9001"
              ports:
                - "9000:9000"
                - "9001:9001"
              environment:
                - MINIO_ROOT_USER=minioadmin
                - MINIO_ROOT_PASSWORD=minioadmin
              networks:
                - test-network

            opensearch:
              image: opensearchproject/opensearch:latest
              container_name: opensearch
              environment:
                - discovery.type=single-node
                - bootstrap.memory_lock=true
                - DISABLE_SECURITY_PLUGIN=true
                - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
              ports:
                - "9200:9200"
              networks:
                - test-network

            spark:
              image: bitnami/spark:3.5.0
              container_name: spark
              hostname: spark
              command: bash -c "cd /opt/bitnami/spark && ./sbin/start-connect-server.sh --host spark --port 15002 && ./sbin/start-master.sh && tail -f /dev/null"
              environment:
                - SPARK_MODE=master
                - SPARK_RPC_AUTHENTICATION_ENABLED=no
                - SPARK_RPC_ENCRYPTION_ENABLED=no
                - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
                - SPARK_SSL_ENABLED=no
                - SPARK_PUBLIC_DNS=spark
              ports:
                - "8080:8080"
                - "7077:7077"
                - "15002:15002"
              networks:
                - test-network

          networks:
            test-network:
              driver: bridge
          EOF

      - name: Start Docker containers
        run: |
          cd docker/integ-test
          docker compose -f docker-compose.minimal.yml up -d
          echo "Waiting for services to start..."
          sleep 60
          docker ps -a
          
          # Check if Spark is running properly
          echo "Checking Spark status:"
          docker logs spark
          docker exec spark ps aux | grep spark
          docker exec spark netstat -tulpn | grep 15002 || echo "Spark Connect port not listening"
          
          # Check network connectivity
          echo "Checking network connectivity:"
          docker network inspect $(docker network ls --format "{{.Name}}" | grep test-network)

      - name: Run tests with Docker
        run: |
          # Create a test script
          cat > run_tests.sh << 'EOF'
          #!/bin/bash
          set -ex
          
          # Fix whitespace issues
          find . -name "*.scala" -type f -exec sed -i 's/[ \t]*$//' {} \;
          
          # Add debug output for network connectivity
          echo "Network connectivity from test container:"
          ping -c 3 spark || echo "Cannot ping spark"
          ping -c 3 minio-S3 || echo "Cannot ping minio-S3"
          ping -c 3 opensearch || echo "Cannot ping opensearch"
          
          # Try to connect to Spark Connect port
          nc -zv spark 15002 || echo "Cannot connect to Spark Connect port"
          
          # Run the tests with debugging enabled
          JAVA_OPTS="-Xmx3g" sbt -Dscalastyle.skip=true -Dtest.timefactor=3 -Dspark.log.level=DEBUG e2etest/test
          EOF
          
          chmod +x run_tests.sh
          
          docker run --rm \
            --network $(docker network ls --format "{{.Name}}" | grep test-network) \
            -v $(pwd):/app \
            -w /app \
            -e SPARK_HOST=spark \
            -e S3_ENDPOINT=minio-S3 \
            -e OPENSEARCH_HOST=opensearch \
            -e GITHUB_ACTIONS=true \
            eclipse-temurin:11-jdk \
            bash -c "apt-get update && apt-get install -y curl netcat-openbsd iputils-ping && curl -L -o sbt.deb https://repo.scala-sbt.org/scalasbt/debian/sbt-1.9.8.deb && dpkg -i sbt.deb && rm sbt.deb && ./run_tests.sh"

      - name: Capture Docker logs (on failure)
        if: failure()
        run: |
          docker ps -a
          docker logs opensearch > opensearch.log 2>&1 || true
          docker logs spark > spark.log 2>&1 || true
          docker logs minio-S3 > minio.log 2>&1 || true

      - name: Upload Docker logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs
          path: "*.log"
          if-no-files-found: warn

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: target/test-reports
